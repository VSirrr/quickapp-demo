<template>
  <!-- 利用stack组件，使"列表中的吸顶元素对应的Mask"覆盖列表 -->
  <stack class="tutorial-page">
    <list class="list">
      <list-item
        id="{{$item}}"
        for="list"
        type="common"
        class="list-item"
        @appear="appear($item, $idx)"
        @disappear="disappear($item, $idx)"
      >
        <text class="text">{{ $item }}</text>
      </list-item>
    </list>

    <!-- 列表中的吸顶元素对应的Mask -->
    <div show="{{maskShow}}">
      <div class="height-300 bg-red">
        <text>{{ label }}</text>
      </div>
    </div>
  </stack>
</template>

<script>
export default {
  private: {
    label: '',
    maskShow: false,
    appearCount: 0,
    list: [
      'A',
      'B',
      'C',
      'D',
      'E',
      'F',
      'G',
      'H',
      'I',
      'J',
      'K',
      'L',
      'M',
      'N',
      'O',
      'P',
      'Q',
      'R',
      'S',
      'T',
      'U',
      'V',
      'W',
      'X',
      'Y',
      'Z',
    ],
    appearIndex: 0,
    disappearIndex: 0,
    activeIndex: 0,
  },
  onInit() {
    this.$page.setTitleBar({ text: '效果展示：吸顶' })
  },

  onReady() {},
  disappear(label, index) {
    // let top;
    console.log('disapper', label)
    // console.log(this.$element(label))
    // this.$element(label).getBoundingClientRect({
    //   success: ({ top, bottom, left, right, width, height }) => {
    //     console.log(top)
    //     // top = top;
    //     if (top <= 0) {
    //       this.label = label
    //       this.maskShow = true
    //     }
    //   }
    // })
    this.disappearIndex = index
    if (index <= this.appearIndex) {
      this.label = label
      this.maskShow = true
      this.activeIndex = index
    }
  },
  appear(label, index) {
    // 加载页面时，所有元素的appear事件都会被触发一次。因此，需要过滤第一次的appear事件
    // console.log(label)
    // if (label !== this.list[0]) {
    //   return
    // }
    // if (this.appearCount) {
    //   this.maskShow = false
    // } else {
    //   ++this.appearCount
    // }
    console.log(label, 'appear')
    this.appearIndex = index
    // if (this.appearIndex < this.disappearIndex) {
    //   this.label = label
    // }
    if (index < this.activeIndex) {
      this.label = label
      this.activeIndex = index
    }
    if (0 == index) {
      this.maskShow = false
    }
  },
}
</script>

<style lang="less">
.tutorial-page {
  flex-direction: column;
  .list {
    width: 750px;
    flex-grow: 1;
    .list-item {
      height: 150px;
      border-bottom-width: 1px;
      border-bottom-color: #0faeff;
      .text {
        flex: 1;
        text-align: center;
      }
    }
  }
  .height-300 {
    height: 300px;
  }
  .bg-red {
    flex-grow: 1;
    justify-content: center;
    background-color: #f76160;
  }
  .bg-blue {
    flex-grow: 1;
    justify-content: center;
    background-color: #0faeff;
  }
}
</style>
